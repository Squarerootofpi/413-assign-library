@{
    ViewData["Title"] = "SteedBooks.com";
}

@model BookListViewModel

<div class="row">
    <div class="col">
        <h1 class="display-4">Welcome</h1>
        <p>Current Book Registry:</p>
    </div>
    <div class="col">
        <div page-model="@Model.PagingInfo" page-action="Index" page-classes-enabled="true"
             page-class="btn"
             page-url-category="@Model.CurrentCategory"
             page-class-normal="btn-outline-secondary"
             page-class-selected="btn btn-outline-primary btn-outline-dark bg-info"
             class="btn-group pull-right m-1 pagination ">
        </div>
        <div class="row">
            <vc:navigation-menu />
            <form asp-page="/AddToCart" method="get">
                <input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.PathAndQuery()" />
                <span class="card-text p-1">
                    <button type="submit" class="btn-success btn-sm text-nowrap pull-right float-right">
                        View cart
                    </button>
                </span>
            </form>
        </div>
    </div>

</div>
<div class="">
    <div class="justify-content-sm-center">
        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Author Last Name</th>
                    <th>Author First Name(s)</th>
                    <th>Publisher</th>
                    <th>Price</th>
                    <th>Total Pages</th>
                    <th>Classification</th>
                    <th>Category</th>
                    <th>ISBN</th>
                </tr>
            </thead>

            <tbody>
                @*This model passed in is the generic model we can use conveniently*@
                @foreach (var m in Model.Books)
                {
                    <partial name="BookSummary" model="m" />
                }
            </tbody>
        </table>
    </div>


</div>